{
	"info": {
		"_postman_id": "246f2e49-0a8e-4dfc-b82e-c7d0d5196157",
		"name": "cal marketing pre request",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Post new address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1024B\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.below(1024);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
							"    pm.response.to.have.header(\"Server\", \"Pepyaka/1.19.10\");\r",
							"    pm.response.to.have.header(\"X-Content-Type-Options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body keys are ok\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response is ok\", function () {\r",
							"  pm.response.to.not.be.error;\r",
							"  pm.response.to.be.withBody;\r",
							"  pm.response.to.not.have.jsonBody('error');\r",
							"})\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.environment.set(\"ID\", jsonData.id);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.clear();\r",
							"pm.environment.set(\"COMPANY\", \"Facebook-\" + new Date().getTime());\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "p0xGj9-JNHlC7MuC01MnNEgx6Xv-fA9ftgu_o_DSVtk.eyJpbnN0YW5jZUlkIjoiZjQ2Y2Q1MDItZjcyZi00NGY3LTk2MzgtNWRhMWRlYjBiNGU3IiwiYXBwRGVmSWQiOiIxNTA1Yjc3NS1lODg1LWViMWItYjY2NS0xZTQ4NWQ5YmY5MGUiLCJtZXRhU2l0ZUlkIjoiMjhiNzkzZDYtNTQyNC00MDU4LTgwNDktMDI2YTRkYjAyODJmIiwic2lnbkRhdGUiOiIyMDIyLTA0LTEyVDAwOjIxOjI2LjEzN1oiLCJ1aWQiOiIzYzI0ZDdiYS02ODJhLTQ1NDgtYmRmOS0zNDA4NjM0ZWZkNjAiLCJkZW1vTW9kZSI6ZmFsc2UsImFpZCI6IjQ5NTA2ZTczLTdkOTItNDM4Yy1iYzZiLTU1YjY0MjFjNTM2ZCIsImJpVG9rZW4iOiJkY2RiNDZkNC1hMzBiLTA0YWYtMTY3MS01ZmNiOTMwMDljYzgiLCJzaXRlT3duZXJJZCI6ImY5MTRmMTFjLWFhYjMtNDUyNy04ZDRlLWJhYjc2MjE0M2E2MCIsImV4cGlyYXRpb25EYXRlIjoiMjAyMi0wNC0xMlQwNDoyMToyNi4xMzdaIiwiaGFzVXNlclJvbGUiOmZhbHNlfQ",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"address\": {\r\n        \"fullName\": {\r\n            \"firstName\": \"gera\",\r\n            \"lastName\": \"din\"\r\n        },\r\n        \"company\": \"{{COMPANY}}\",\r\n        \"taxInfo\": {\r\n            \"id\": null,\r\n            \"type\": null\r\n        },\r\n        \"addressLine1\": \"6700 Valjean Avenue\",\r\n        \"addressLine2\": \"90\",\r\n        \"street\": {\r\n            \"name\": null,\r\n            \"number\": null\r\n        },\r\n        \"city\": \"Los Angeles\",\r\n        \"country\": \"USA\",\r\n        \"subdivision\": \"CA\",\r\n        \"zipCode\": \"91406\",\r\n        \"phoneNumber\": \"5674562233\",\r\n        \"location\": {\r\n            \"latitude\": 34.1920669,\r\n            \"longitude\": -118.4849994\r\n        }\r\n    },\r\n    \"setAsDefault\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Make default",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Code one of 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1024B\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.below(1024);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
							"    pm.response.to.have.header(\"Server\", \"Pepyaka/1.19.10\");\r",
							"    pm.response.to.have.header(\"X-Content-Type-Options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body keys are ok\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"{}\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response is ok\", function () {\r",
							"  pm.response.to.not.be.error;\r",
							"  pm.response.to.be.withBody;\r",
							"  pm.response.to.not.have.jsonBody('error');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "qblwpSQC6VWGT5DRtNA2nYBT2An2qzJT599CCmfZORk.eyJpbnN0YW5jZUlkIjoiZjQ2Y2Q1MDItZjcyZi00NGY3LTk2MzgtNWRhMWRlYjBiNGU3IiwiYXBwRGVmSWQiOiIxNTA1Yjc3NS1lODg1LWViMWItYjY2NS0xZTQ4NWQ5YmY5MGUiLCJtZXRhU2l0ZUlkIjoiMjhiNzkzZDYtNTQyNC00MDU4LTgwNDktMDI2YTRkYjAyODJmIiwic2lnbkRhdGUiOiIyMDIyLTA0LTAyVDIzOjI2OjU5LjM1OVoiLCJ1aWQiOiIzYzI0ZDdiYS02ODJhLTQ1NDgtYmRmOS0zNDA4NjM0ZWZkNjAiLCJkZW1vTW9kZSI6ZmFsc2UsImFpZCI6IjQ5NTA2ZTczLTdkOTItNDM4Yy1iYzZiLTU1YjY0MjFjNTM2ZCIsImJpVG9rZW4iOiJkY2RiNDZkNC1hMzBiLTA0YWYtMTY3MS01ZmNiOTMwMDljYzgiLCJzaXRlT3duZXJJZCI6ImY5MTRmMTFjLWFhYjMtNDUyNy04ZDRlLWJhYjc2MjE0M2E2MCIsImV4cGlyYXRpb25EYXRlIjoiMjAyMi0wNC0wM1QwMzoyNjo1OS4zNTlaIiwiaGFzVXNlclJvbGUiOmZhbHNlfQ",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"{{ID}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/default",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"default"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all addresses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Code one of 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 4000B\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.below(4000);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
							"    pm.response.to.have.header(\"Server\", \"Pepyaka/1.19.10\");\r",
							"    pm.response.to.have.header(\"X-Content-Type-Options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body keys are ok\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"    pm.expect(pm.response.text()).to.include(\"fullName\");\r",
							"    pm.expect(pm.response.text()).to.include(\"firstName\");\r",
							"    pm.expect(pm.response.text()).to.include(\"lastName\");\r",
							"    pm.expect(pm.response.text()).to.include(\"country\");\r",
							"    pm.expect(pm.response.text()).to.include(\"subdivision\");\r",
							"    pm.expect(pm.response.text()).to.include(\"city\");\r",
							"    pm.expect(pm.response.text()).to.include(\"zipCode\");\r",
							"    pm.expect(pm.response.text()).to.include(\"phoneNumber\");\r",
							"    pm.expect(pm.response.text()).to.include(\"company\");\r",
							"    pm.expect(pm.response.text()).to.include(\"addressLine1\");\r",
							"    pm.expect(pm.response.text()).to.include(\"location\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Body id value\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"ID\"));\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response is ok\", function () {\r",
							"  pm.response.to.not.be.error;\r",
							"  pm.response.to.be.withBody;\r",
							"  pm.response.to.be.json;\r",
							"  pm.response.to.not.have.jsonBody('error');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get specific address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Code one of 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1500B\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.below(1500);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
							"    pm.response.to.have.header(\"Server\", \"Pepyaka/1.19.10\");\r",
							"    pm.response.to.have.header(\"X-Content-Type-Options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body keys\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"    pm.expect(pm.response.text()).to.include(\"fullName\");\r",
							"    pm.expect(pm.response.text()).to.include(\"firstName\");\r",
							"    pm.expect(pm.response.text()).to.include(\"lastName\");\r",
							"    pm.expect(pm.response.text()).to.include(\"country\");\r",
							"    pm.expect(pm.response.text()).to.include(\"subdivision\");\r",
							"    pm.expect(pm.response.text()).to.include(\"city\");\r",
							"    pm.expect(pm.response.text()).to.include(\"zipCode\");\r",
							"    pm.expect(pm.response.text()).to.include(\"phoneNumber\");\r",
							"    pm.expect(pm.response.text()).to.include(\"company\");\r",
							"    pm.expect(pm.response.text()).to.include(\"addressLine1\");\r",
							"    pm.expect(pm.response.text()).to.include(\"location\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Key/value check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.id).to.eql(pm.environment.get(\"ID\"));\r",
							"    pm.expect(jsonData.address.fullName.firstName).to.eql(\"gera\");\r",
							"    pm.expect(jsonData.address.fullName.lastName).to.eql(\"din\");\r",
							"    pm.expect(jsonData.address.country).to.eql(\"USA\");\r",
							"    pm.expect(jsonData.address.subdivision).to.eql(\"CA\");\r",
							"    pm.expect(jsonData.address.city).to.eql(\"Los Angeles\");\r",
							"    pm.expect(jsonData.address.zipCode).to.eql(\"91406\");\r",
							"    pm.expect(jsonData.address.phoneNumber).to.eql(\"5674562233\");\r",
							"    pm.expect(jsonData.address.company).to.eql(pm.environment.get(\"COMPANY\"));\r",
							"    pm.expect(jsonData.address.addressLine1).to.eql(\"6700 Valjean Avenue\");\r",
							"    pm.expect(jsonData.address.addressLine2).to.eql(\"90\");\r",
							"    pm.expect(jsonData.address.location.latitude).to.eql(34.1920669);\r",
							"    pm.expect(jsonData.address.location.longitude).to.eql(-118.4849994);\r",
							"    pm.expect(jsonData.isDefaultAddress).to.eql(true);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Types of values are correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.address.id).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.fullName).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.address.fullName.firstName).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.fullName.lastName).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.country).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.subdivision).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.city).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.zipCode).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.phoneNumber).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.company).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.addressLine1).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.location).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.address.location.latitude).to.be.a(\"number\");\r",
							"    pm.expect(jsonData.address.location.longitude).to.be.a(\"number\");\r",
							"    pm.expect(jsonData.isDefaultAddress).to.be.a(\"boolean\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response is ok\", function () {\r",
							"  pm.response.to.not.be.error;\r",
							"  pm.response.to.be.withBody;\r",
							"  pm.response.to.be.json;\r",
							"  pm.response.to.not.have.jsonBody('error');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					],
					"query": [
						{
							"key": "id",
							"value": "{{ID}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Code one of 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1500B\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.below(1500);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
							"    pm.response.to.have.header(\"Server\", \"Pepyaka/1.19.10\");\r",
							"    pm.response.to.have.header(\"X-Content-Type-Options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"{}\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response is correct\", function () {\r",
							"  pm.response.to.not.be.error;\r",
							"  pm.response.to.be.withBody;\r",
							"  pm.response.to.be.json;\r",
							"  pm.response.to.not.have.jsonBody('error');\r",
							"  pm.response.to.have.jsonBody({});\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"COMPANY\", \"Facebook-\" + new Date().getTime());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"address\": {\r\n        \"fullName\": {\r\n            \"firstName\": \"Liz\",\r\n            \"lastName\": \"Lea\"\r\n        },\r\n        \"company\": \"{{COMPANY}}\",\r\n        \"taxInfo\": {\r\n            \"id\": null,\r\n            \"type\": null\r\n        },\r\n        \"addressLine1\": \"7121 Lonzo Street\",\r\n        \"addressLine2\": \"90\",\r\n        \"street\": {\r\n            \"name\": null,\r\n            \"number\": null\r\n        },\r\n        \"city\": \"Los Angeles\",\r\n        \"country\": \"USA\",\r\n        \"subdivision\": \"CA\",\r\n        \"zipCode\": \"91042\",\r\n        \"phoneNumber\": \"8976754499\",\r\n        \"location\": null\r\n    },\r\n    \"setAsDefault\": true,\r\n    \"fieldMask\": {\r\n        \"paths\": [\r\n            \"fullName.firstName\",\r\n            \"fullName.lastName\",\r\n            \"company\",\r\n            \"addressLine1\",\r\n            \"city\",\r\n            \"country\",\r\n            \"zipCode\",\r\n            \"phoneNumber\",\r\n            \"setAsDefault\"\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get changed address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Code one of 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1500B\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.below(1500);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
							"    pm.response.to.have.header(\"Server\", \"Pepyaka/1.19.10\");\r",
							"    pm.response.to.have.header(\"X-Content-Type-Options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body keys are correct\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"    pm.expect(pm.response.text()).to.include(\"fullName\");\r",
							"    pm.expect(pm.response.text()).to.include(\"firstName\");\r",
							"    pm.expect(pm.response.text()).to.include(\"lastName\");\r",
							"    pm.expect(pm.response.text()).to.include(\"country\");\r",
							"    pm.expect(pm.response.text()).to.include(\"subdivision\");\r",
							"    pm.expect(pm.response.text()).to.include(\"city\");\r",
							"    pm.expect(pm.response.text()).to.include(\"zipCode\");\r",
							"    pm.expect(pm.response.text()).to.include(\"phoneNumber\");\r",
							"    pm.expect(pm.response.text()).to.include(\"company\");\r",
							"    pm.expect(pm.response.text()).to.include(\"addressLine1\");\r",
							"    pm.expect(pm.response.text()).to.include(\"addressLine2\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Key/value check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.id).to.eql(pm.environment.get(\"ID\"));\r",
							"    pm.expect(jsonData.address.fullName.firstName).to.eql(\"Liz\");\r",
							"    pm.expect(jsonData.address.fullName.lastName).to.eql(\"Lea\");\r",
							"    pm.expect(jsonData.address.country).to.eql(\"USA\");\r",
							"    pm.expect(jsonData.address.subdivision).to.eql(\"CA\");\r",
							"    pm.expect(jsonData.address.city).to.eql(\"Los Angeles\");\r",
							"    pm.expect(jsonData.address.zipCode).to.eql(\"91042\");\r",
							"    pm.expect(jsonData.address.phoneNumber).to.eql(\"8976754499\");\r",
							"    pm.expect(jsonData.address.company).to.eql(pm.environment.get(\"COMPANY\"));\r",
							"    pm.expect(jsonData.address.addressLine1).to.eql(\"7121 Lonzo Street\");\r",
							"    pm.expect(jsonData.address.addressLine2).to.eql(\"90\");\r",
							"    pm.expect(jsonData.isDefaultAddress).to.eql(true);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Types of values are correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.address.id).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.fullName).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.address.fullName.firstName).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.fullName.lastName).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.country).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.subdivision).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.city).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.zipCode).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.phoneNumber).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.company).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.addressLine1).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.addressLine2).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.isDefaultAddress).to.be.a(\"boolean\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response is correct\", function () {\r",
							"  pm.response.to.not.be.error;\r",
							"  pm.response.to.be.withBody;\r",
							"  pm.response.to.be.json;\r",
							"  pm.response.to.not.have.jsonBody('error');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deletel address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Code one of 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1500B\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.below(1500);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
							"    pm.response.to.have.header(\"Server\", \"Pepyaka/1.19.10\");\r",
							"    pm.response.to.have.header(\"X-Content-Type-Options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"{}\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response is correct\", function () {\r",
							"  pm.response.to.not.be.error;\r",
							"  pm.response.to.be.withBody;\r",
							"  pm.response.to.be.json;\r",
							"  pm.response.to.be.an (\"object\")\r",
							"  pm.response.to.not.have.jsonBody('error');\r",
							"  pm.response.to.have.jsonBody({});\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get deleted address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Code one of 400\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 403, 404, 422]);\r",
							"});\r",
							"\r",
							"pm.test(\"Code is not 200\", function () {\r",
							"    pm.expect(pm.response.code).to.not.be.oneOf([200, 201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"     pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1500B\", function () {\r",
							"     pm.expect(pm.response.responseSize).to.be.below(1500);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"     pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"     pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
							"     pm.response.to.have.header(\"Server\", \"Pepyaka/1.19.10\");\r",
							"     pm.response.to.have.header(\"X-Content-Type-Options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Types of values are correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.details).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.details.cant_find).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body keys are correct\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"message\");\r",
							"    pm.expect(pm.response.text()).to.include(\"details\");\r",
							"    pm.expect(pm.response.text()).to.include(\"cant_find\");\r",
							"});\r",
							"\r",
							"pm.test(\"Cant find ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.details.cant_find).to.include(pm.environment.get(\"ID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Response is correct\", function () {\r",
							"   pm.response.to.be.error;\r",
							"   pm.response.to.be.withBody;\r",
							"   pm.response.to.be.json;\r",
							"   pm.response.to.be.an (\"object\")\r",
							"   pm.response.to.not.have.jsonBody('error');\r",
							" })"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete address 2nd time",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Code one of 400\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 403, 404, 422]);\r",
							"});\r",
							"\r",
							"pm.test(\"Code is not 200\", function () {\r",
							"    pm.expect(pm.response.code).to.not.be.oneOf([200, 201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"     pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1500B\", function () {\r",
							"     pm.expect(pm.response.responseSize).to.be.below(1500);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"     pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"     pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
							"     pm.response.to.have.header(\"Server\", \"Pepyaka/1.19.10\");\r",
							"     pm.response.to.have.header(\"X-Content-Type-Options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Types of values are correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.details).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.details.cant_find).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body keys are correct\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"message\");\r",
							"    pm.expect(pm.response.text()).to.include(\"details\");\r",
							"    pm.expect(pm.response.text()).to.include(\"cant_find\");\r",
							"});\r",
							"\r",
							"pm.test(\"Cant find ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.details.cant_find).to.include(pm.environment.get(\"ID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Response is correct\", function () {\r",
							"   pm.response.to.be.error;\r",
							"   pm.response.to.be.withBody;\r",
							"   pm.response.to.be.json;\r",
							"   pm.response.to.be.an (\"object\")\r",
							"   pm.response.to.not.have.jsonBody('error');\r",
							" })"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "p0xGj9-JNHlC7MuC01MnNEgx6Xv-fA9ftgu_o_DSVtk.eyJpbnN0YW5jZUlkIjoiZjQ2Y2Q1MDItZjcyZi00NGY3LTk2MzgtNWRhMWRlYjBiNGU3IiwiYXBwRGVmSWQiOiIxNTA1Yjc3NS1lODg1LWViMWItYjY2NS0xZTQ4NWQ5YmY5MGUiLCJtZXRhU2l0ZUlkIjoiMjhiNzkzZDYtNTQyNC00MDU4LTgwNDktMDI2YTRkYjAyODJmIiwic2lnbkRhdGUiOiIyMDIyLTA0LTEyVDAwOjIxOjI2LjEzN1oiLCJ1aWQiOiIzYzI0ZDdiYS02ODJhLTQ1NDgtYmRmOS0zNDA4NjM0ZWZkNjAiLCJkZW1vTW9kZSI6ZmFsc2UsImFpZCI6IjQ5NTA2ZTczLTdkOTItNDM4Yy1iYzZiLTU1YjY0MjFjNTM2ZCIsImJpVG9rZW4iOiJkY2RiNDZkNC1hMzBiLTA0YWYtMTY3MS01ZmNiOTMwMDljYzgiLCJzaXRlT3duZXJJZCI6ImY5MTRmMTFjLWFhYjMtNDUyNy04ZDRlLWJhYjc2MjE0M2E2MCIsImV4cGlyYXRpb25EYXRlIjoiMjAyMi0wNC0xMlQwNDoyMToyNi4xMzdaIiwiaGFzVXNlclJvbGUiOmZhbHNlfQ",
				"type": "string"
			},
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}